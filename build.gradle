plugins {
    id 'java-library'
    id 'maven-publish'
}

archivesBaseName = 'launchwrapper'

project.ext.asm_version = 9.7

def ENV = System.getenv()

dependencies {
    implementation "org.mcphackers.rdi:rdi:1.0"
    implementation "org.ow2.asm:asm:${project.asm_version}"
    implementation "org.ow2.asm:asm-util:${project.asm_version}"
    implementation "org.ow2.asm:asm-tree:${project.asm_version}"
    implementation "org.json:json:20240303"
    // I'll bring discord RPC support later, when I have an environment to compile natives

    testRuntimeOnly('org.junit.platform:junit-platform-launcher:1.5.2')
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.0.0'
}

test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
        events = ["passed", "failed", "skipped"]
        showStandardStreams = true
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    group = 'org.mcphackers'
    project.version = '1.0'
    if(!ENV.RELEASE.equals('1')) {
        project.version += '-SNAPSHOT'
	}

    repositories {
        maven {
            url "https://libraries.minecraft.net/"
        }
        maven {
            url "https://maven.glass-launcher.net/releases"
        }
        mavenCentral()
    }

    task sourcesJar(type: Jar) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives jar
        archives sourcesJar
    }

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    compileJava {
        options.encoding = "UTF-8"

        // Minecraft is mostly compatible with java 5 up until the version we support, so why not?
        if (JavaVersion.current().ordinal() <= JavaVersion.VERSION_1_8.ordinal()) {
            sourceCompatibility = JavaVersion.VERSION_1_5
            targetCompatibility = JavaVersion.VERSION_1_5
        }
    }

    compileTestJava {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    afterEvaluate {
        publishing {
            publications {
                mavenJava(MavenPublication) {
                    artifactId = project.archivesBaseName
                
                    artifact jar
                    artifact sourcesJar
                }
            }

            repositories {
                mavenLocal()
                
                if (ENV.MAVEN_URL) {
                    maven {
                        url ENV.MAVEN_URL
                        if (ENV.MAVEN_USERNAME) {
                            credentials {
                                username ENV.MAVEN_USERNAME
                                password ENV.MAVEN_PASSWORD
                            }
                        }
                    }
                }
            }
        }
    }
}